<project name="Version" xmlns="http://nant.sf.net/schemas/nant.xsd">
  
  <target name="UpdateVersion" failonerror="false" if="${property::exists('IncrementVersion')}">

    <property name="svn.repo" value="https://databasescripter.googlecode.com/svn/trunk" />

    <if test="${bool::parse(IncrementVersion)}"> 
      <echo>Getting current revision from ${svn.repo}</echo>    
      
		  <exec program="svn.exe" output="svninfo.xml">
			  <arg value="info" />
			  <arg value="--xml" />
		  	<arg value="${svn.repo}" />
	  	</exec>

      <xmlpeek file="svninfo.xml" xpath="/info/entry/commit/@revision" property="svn.revision"/>
      <echo>Current svn revision is ${svn.revision}</echo>         

      <property name="version.revision" value="${int::parse(svn.revision) + 1}" />
      <echo>New revision will be ${version.revision}</echo>         
      
      <xmlpoke file="Version.xml" xpath="/version/revision" value="${version.revision}" />
    </if>
  
  </target>
  
  <target name="Version" depends="UpdateVersion">

    
    <xmlpeek file="Version.xml" xpath="/version/major" property="version.major" />
    <xmlpeek file="Version.xml" xpath="/version/minor" property="version.minor" />
    <xmlpeek file="Version.xml" xpath="/version/build" property="version.build" />
    <xmlpeek file="Version.xml" xpath="/version/revision" property="version.revision" />

    <property name="package.version" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
    <echo>Version is ${package.version}.</echo>        
        
    <asminfo output="${code.solution.dir}AssemblyVersion.cs" language="CSharp">
        <imports>
            <import namespace="System.Reflection" />
        </imports>
        <attributes>
            <attribute type="AssemblyVersionAttribute" value="${package.version}" />
            <attribute type="AssemblyFileVersionAttribute" value="${package.version}" />
        </attributes>
    </asminfo>
    

  </target>

</project>