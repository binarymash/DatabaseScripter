<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReportGenerator</name>
    </assembly>
    <members>
        <member name="T:Palmmedia.ReportGenerator.Parser.IParser">
            <summary>
            Interface for different parsers.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.IParser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.IParser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.IParser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.IParser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.IParser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Program">
            <summary>
            Command line access to the ReportBuilder.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Program.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Program.Main(System.String[])">
            <summary>
            The main method.
            </summary>
            <param name="args">The arguments.</param>
            <returns>Return code indicating success/failure.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Program.ShowHelp">
            <summary>
            Shows the help of the programm.
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.OpenCoverParser">
            <summary>
            Parser for XML reports generated by OpenCover.
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.ParserBase">
            <summary>
            Base class for some <see cref="T:Palmmedia.ReportGenerator.Parser.IParser"/> implementations.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.ParserBase.#ctor(System.Xml.Linq.XContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.ParserBase"/> class.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Parser.ParserBase.Report">
            <summary>
            Gets the report file as XContainer.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Parser.ParserBase.LineCoverageByFileDictionary">
            <summary>
            Gets the dictionary containing the line coverage information by file.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.OpenCoverParser.assembliesHashSet">
            <summary>
            The covered assemblies. The HashSet is used for caching.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.#ctor(System.Xml.Linq.XContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.OpenCoverParser"/> class.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.OpenCoverParser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.PartCover22Parser">
            <summary>
            Parser for XML reports generated by PartCover 2.2.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.PartCover22Parser.assembliesHashSet">
            <summary>
            The covered assemblies. The HashSet is used for caching.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.#ctor(System.Xml.Linq.XContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.PartCover22Parser"/> class.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover22Parser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Assembly">
            <summary>
            Represents one assembly.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Assembly.classes">
            <summary>
            List of classes in assembly.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Assembly.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Assembly"/> class.
            </summary>
            <param name="name">The name of the assembly.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Assembly.AddClass(Palmmedia.ReportGenerator.Class)">
            <summary>
            Addes the given class to the assembly.
            </summary>
            <param name="clazz">The class to add.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Assembly.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if equal otherwise false.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Assembly.GetHashCode">
            <summary>
            Returns the HashCode
            </summary>
            <returns>The HashCode</returns>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.Classes">
            <summary>
            Gets the list of classes in assembly.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.Name">
            <summary>
            Gets the name of the assembly.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.CoveredLines">
            <summary>
            Gets the number of covered lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.CoverableLines">
            <summary>
            Gets the number of coverable lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.TotalLines">
            <summary>
            Gets the number of total lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Assembly.CoverageQuota">
            <summary>
            Gets the coverage quota of the class.
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Common.LinqExtensions">
            <summary>
            Linq extensions.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Common.LinqExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.HashSet`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="input">The input.</param>
            <returns>A <see cref="T:System.Collections.Generic.HashSet`1"/>.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Common.LinqExtensions.ToQueue``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Queue`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="input">The input.</param>
            <returns>A <see cref="T:System.Collections.Generic.Queue`1"/>.</returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.PartCover23Parser">
            <summary>
            Parser for XML reports generated by PartCover 2.3 and above.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.PartCover23Parser.assembliesByIdDictionary">
            <summary>
            Dictionary containing the assembly names by id.
            In PartCover 2.3.0.35109 the assemblies are referenced by an id.
            Before only their name was required.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.PartCover23Parser.assemblyAttribute">
            <summary>
            The attribute name to the corresponding assembly.
            In PartCover 2.3.0.35109 this is "asmref".
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.#ctor(System.Xml.Linq.XContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.PartCover23Parser"/> class.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.PartCover23Parser.AddCoverageDataOfUnexecutedMethods(System.Xml.Linq.XContainer)">
            <summary>
            Adds the coverage data of unexecuted methods.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Class">
            <summary>
            Represents a class.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Class.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Class"/> class.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="name">The name of the class.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Class.Equals(System.Object)">
            <summary>
            Determines whether the given object is equal.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if equal otherwise false.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Class.GetHashCode">
            <summary>
            Returns the HashCode
            </summary>
            <returns>The HashCode</returns>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.AssemblyName">
            <summary>
            Gets the name of the assembly.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.Name">
            <summary>
            Gets the name of the class.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.CoveredLines">
            <summary>
            Gets or sets the number of covered lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.CoverableLines">
            <summary>
            Gets or sets the number of coverable lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.TotalLines">
            <summary>
            Gets or sets the number of total lines.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Class.CoverageQuota">
            <summary>
            Gets the coverage quota of the class.
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult">
            <summary>
            Contains information about the postion of a method within a source code file.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult"/> class.
            </summary>
            <param name="start">The start line number.</param>
            <param name="end">The end line number.</param>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult.Start">
            <summary>
            Gets the start line number.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult.End">
            <summary>
            Gets the end line number
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.ParserFactory">
            <summary>
            Initiates the corresponding parser to the given report file.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.ParserFactory.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.ParserFactory.CreateParser(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Tries to initiate the correct parsers for the given reports. <c>null</c> is returned if no parser has been found.
            </summary>
            <param name="reportFiles">The report files to parse.</param>
            <returns>The IParser instance or <c>null</c> if no matching parser has been found.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.ParserFactory.GetParsersOfFile(System.String)">
            <summary>
            Tries to initiate the correct parsers for the given report. An empty list is returned if no parser has been found.
            The report may contain serveral reports. For every report an extra parser is initiated.
            </summary>
            <param name="reportFile">The report file to parse.</param>
            <returns>The IParser instances or an empty list if no matching parser has been found.</returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.MSBuild.ReportGenerator">
            <summary>
            MSBuild Task for generating reports.
            </summary>
            <example>
            &lt;?xml version="1.0" encoding="utf-8"?&gt;<br/>
            &lt;Project DefaultTargets="Coverage" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0"&gt;<br/>
              &lt;UsingTask TaskName="ReportGenerator" AssemblyFile="ReportGenerator.exe" /&gt;<br/>
              &lt;ItemGroup&gt;<br/>
                  &lt;CoverageFiles Include="partcover.xml" /&gt;<br/>
              &lt;/ItemGroup&gt;<br/>
              &lt;Target Name="Coverage"&gt;<br/>
                &lt;ReportGenerator ReportFiles="@(CoverageFiles)" TargetDirectory="report" /&gt;<br/>
              &lt;/Target&gt;<br/>
            &lt;/Project&gt;
            </example>
        </member>
        <member name="M:Palmmedia.ReportGenerator.MSBuild.ReportGenerator.Execute">
            <summary>
            When overridden in a derived class, executes the task.
            </summary>
            <returns>
            true if the task successfully executed; otherwise, false.
            </returns>
        </member>
        <member name="P:Palmmedia.ReportGenerator.MSBuild.ReportGenerator.ReportFiles">
            <summary>
            Gets or sets the report files.
            </summary>
        </member>
        <member name="P:Palmmedia.ReportGenerator.MSBuild.ReportGenerator.TargetDirectory">
            <summary>
            Gets or sets the directory the report will be created in. This must be a directory, not a file. If the directory does not exist, it is created automatically. 
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.NCoverParser">
            <summary>
            Parser for XML reports generated by NCover.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.NCoverParser.assembliesHashSet">
            <summary>
            The covered assemblies. The HashSet is used for caching.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.#ctor(System.Xml.Linq.XContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.NCoverParser"/> class.
            </summary>
            <param name="report">The report file as XContainer.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.NCoverParser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.MultiReportParser">
            <summary>
            Parser that aggregates serveral parsers.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.MultiReportParser.parsers">
            <summary>
            The parsers to aggregate.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.#ctor(System.Collections.Generic.IEnumerable{Palmmedia.ReportGenerator.Parser.IParser})">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.MultiReportParser"/> class.
            </summary>
            <param name="parsers">The parsers.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.Files">
            <summary>
            Determine all covered files.
            </summary>
            <returns>All covered files.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.Assemblies">
            <summary>
            Determine all covered assemblies.
            </summary>
            <returns>All covered assemblies.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.ClassesInAssembly(System.String)">
            <summary>
            Determine all covered classes within an assembly.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>All covered classes within an assembly.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.FilesOfClass(System.String,System.String)">
            <summary>
            Determine all files a class is defined in.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <returns>All files a class is defined in.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.NumberOfLineVisits(System.String,System.String,System.String,System.Int32)">
            <summary>
            Determine how often a line of code has been covered.
            If line could not be covered at all -1 is returned.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <param name="className">The name of the class.</param>
            <param name="fileName">The name of the file.</param>
            <param name="lineNumber">The number of the line (starting with 1, not zero based).</param>
            <returns>Number of visits.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.MultiReportParser.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo">
            <summary>
            Represents method information extracted from a PartCover report.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.parameterDelimiter">
            <summary>
            The delimiters between parameters.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.typeReplacements">
            <summary>
            Dictionary containing some type mappings.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.classname">
            <summary>
            The name of the class.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.methodname">
            <summary>
             The name of the method.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.returnType">
            <summary>
            The return type of the method.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.parameters">
            <summary>
            The parameters extracted from the method signature contained in the report generated by PartCover.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo"/> class.
            </summary>
            <param name="classname">The name of the class.</param>
            <param name="methodname">The name of the method.</param>
            <param name="signature">The signature of the method.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.AreParametersMatching(System.Collections.Generic.List{ICSharpCode.NRefactory.Ast.ParameterDeclarationExpression})">
            <summary>
            Determines whether all parameters match.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns><c>true</c> if all parameters are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.DoesMethodnameMatch(System.String)">
            <summary>
            Determines whether the method name matches.
            </summary>
            <param name="methodname">The name of the method.</param>
            <returns><c>true</c> if method names are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.DoesReturnTypeMatch(ICSharpCode.NRefactory.Ast.TypeReference)">
            <summary>
            Determines whether the return type matches.
            </summary>
            <param name="typeReference">The return type of the method.</param>
            <returns><c>true</c> if return types are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.AreTypesEqual(System.String,ICSharpCode.NRefactory.Ast.TypeReference)">
            <summary>
            Determines whether the types are equal.
            </summary>
            <param name="expectedType">The expected type.</param>
            <param name="typeReference">The type reference.</param>
            <returns><c>true</c> if parameters are equal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.InitializeTypeReplacements">
            <summary>
            Initializes the type replacements.
            </summary>
            <returns>The type replacements.</returns>
        </member>
        <member name="P:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo.IsConstructor">
            <summary>
            Gets a value indicating whether this method is a constructor.
            </summary>
        </member>
        <member name="T:Palmmedia.ReportGenerator.ReportBuilder">
            <summary>
            Converts a report generated by PartCover or NCover into a readable HTML report.
            In contrast to the XSLT-Transformation included in PartCover, the report is more detailed.
            It does not only show the coverage quota, but also includes the source code and visualizes which line has been covered.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.HtmlStart">
            <summary>
            The head of each generated HTML file.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.HtmlDontate">
            <summary>
            The donate button.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.HtmlEnd">
            <summary>
            The end of each generated HTML file.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.logger">
            <summary>
            The logger.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.parser">
            <summary>
            The parser to use.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.targetDirectory">
            <summary>
            The directory where the generated report should be saved.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.ReportBuilder.assemblies">
            <summary>
            List of all assemblies.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.#ctor(Palmmedia.ReportGenerator.Parser.IParser,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Palmmedia.ReportGenerator.ReportBuilder"/> class.
            </summary>
            <param name="parser">The IParser to use.</param>
            <param name="targetDirectory">The directory where the generated report should be saved.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.CreateReport">
            <summary>
            Starts the generation of the report.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.CreateIndex">
            <summary>
            Creates the index showing a overview of all assemblies and classes.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.CreateClassReport(Palmmedia.ReportGenerator.Class)">
            <summary>
            Creates the report for the given class.
            </summary>
            <param name="clazz">The class.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.AnalyzeFile(System.String,Palmmedia.ReportGenerator.Class)">
            <summary>
            Analyses a file and generates a coverage report of the file.
            </summary>
            <param name="fileName">The name of the file.</param>
            <param name="clazz">The name of the assembly.</param>
            <returns>The generated coverage report of the given file.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.WriteToFile(System.String,System.String)">
            <summary>
            Writes the given text to a file.
            </summary>
            <param name="content">The text to write.</param>
            <param name="filename">The name of the file.</param>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.ReplaceInvalidChars(System.String)">
            <summary>
            Replaces all invalid chars in a filename by '-'.
            </summary>
            <param name="fileName">The filename.</param>
            <returns>The valid filename.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.CreateCoverageTable(System.Decimal)">
            <summary>
            Builds a table showing the coverage quota with red and green bars.
            </summary>
            <param name="coverage">The coverage quota.</param>
            <returns>Table showing the coverage quota with red and green bars.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.ReportBuilder.CreateFooter">
            <summary>
            Builds the footer.
            </summary>
            <returns>The footer.</returns>
        </member>
        <member name="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer">
            <summary>
            Helper class to determine the begin and end line number of methods within a source code file.
            This class is used to compensate a deficiency of PartCover 2.3.0.35109:
            PartCover does not record coverage information for unexecuted methods any more.
            To provide correct reports the line numbers are determined from the source code files instead of
            PartCover's coverage information.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer.lastFilename">
            <summary>
            The name of the last source code file that has successfully been parsed.
            </summary>
        </member>
        <member name="F:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer.lastNode">
            <summary>
            The <see cref="T:ICSharpCode.NRefactory.Ast.INode"/> of the last source code file that has successfully been parsed.
            </summary>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer.FindMethod(System.String,Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo)">
            <summary>
            Searches the given source code file for a method matching the given <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo"/>.
            If the method can be found, a <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult"/> containing the start and end line numbers is returned.
            Otherwise <c>null</c> is returned.
            </summary>
            <param name="filename">The filename.</param>
            <param name="methodInfo">The method info.</param>
            <returns>A <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult"/> or <c>null</c> if method can not be found.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer.FindMethod(System.Collections.Generic.IEnumerable{ICSharpCode.NRefactory.Ast.INode},Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo)">
            <summary>
            Searches the given <see cref="T:ICSharpCode.NRefactory.Ast.INode">INodes</see> recursivly for the given method.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="methodInfo">The method info.</param>
            <returns>A <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult"/> or <c>null</c> if method can not be found.</returns>
        </member>
        <member name="M:Palmmedia.ReportGenerator.Parser.CodeAnalysis.Analyzer.TryGetMethodResult(ICSharpCode.NRefactory.Ast.INode,Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo,Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult@)">
            <summary>
            Retrives the <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodResult"/> from the given <see cref="T:ICSharpCode.NRefactory.Ast.INode"/> if it matches the <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo"/>.
            The return value indicates whether the operation was successful.
            </summary>
            <param name="node">The node.</param>
            <param name="methodInfo">The method info.</param>
            <param name="methodResult">The method result.</param>
            <returns><c>true</c> if <see cref="T:ICSharpCode.NRefactory.Ast.INode"/> matches the <see cref="T:Palmmedia.ReportGenerator.Parser.CodeAnalysis.MethodInfo"/>, otherwise <c>false</c>.</returns>
        </member>
    </members>
</doc>
